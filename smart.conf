net {
  type = mainnet
}

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.engine = "ROCKSDB",
  db.directory = "database",
  index.directory = "index",
  transHistory.switch = "on"

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    //    {
    //      name = "account",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    {
    //      name = "account-index",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
  ]
    dbSettings = {
        levelNumber = 7
        //compactThreads = 32
        blocksize = 64  // n * KB
        maxBytesForLevelBase = 256  // n * MB
        maxBytesForLevelMultiplier = 10
        level0FileNumCompactionTrigger = 4
        targetFileSizeBase = 256  // n * MB
        targetFileSizeMultiplier = 1
      }

    needToUpdateAsset = true
}

# this part of config is used to node discovery.
node.discovery = {
  enable = true  # you should set this entry value with ture if you want your node can be discovered by other node.
  persist = true  # this entry is used to determined to whether storing the peers in the database or not.
  bind.ip = ""
  external.ip = null
}

# this part of config is used to set backup node for witness service.
node.backup {
  port = 10001
  priority = 8
  members = [
  ]
}

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:11359"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 11350

  connection.timeout = 2

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  maxActiveNodes = 30

  maxActiveNodesWithSameIp = 2

  minParticipationRate = 0

  # check the peer data transfer ,disconnect factor
  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  p2p {
    version = 20230304 # 11111: mainnet; 20180622: testnet; you can set other number when you deploy one private net, but the node must have the same number in some private net.
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  http {
    fullNodePort = 11357
    solidityPort = 11358
  }

  rpc {
    port = 11359

    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =

    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 0
  }

}

seed.node = {
  # List of the seed nodes. This is used to enable the node can connect when join one net at first.
  # If you deploy one private net, you must add some "ip:port" here for other node connecting.
  # Seed nodes are stable full nodes, and the first SuperNode must be inclued in.
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
   ip.list = ["10.24.0.22:11350"]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Alfa"
      accountType = "AssetIssue"
      address = "saJBRYG958FDykuhYa1XKFjpKQQhW9cGxu"
      balance = "100000000000"
    },
    {
      accountName = "Beta"
      accountType = "AssetIssue"
      address = "sWhVZXJGcyh346AgNCRMNchabhx4EY8ioX"
      balance = "100000000000"
    },
    {
      accountName = "Gamma"
      accountType = "AssetIssue"
      address = "scRoapDbW3nw1JRLjXDRHNw5NJrbfiRvRw"
      balance = "1000000000000"
    },
    {
      accountName = "Delta"
      accountType = "AssetIssue"
      address = "sTZMkAEfFx9ceD11XGLKJVPtkeiH1CLDPv"
      balance = "1000000000000"
    },
    {
      accountName = "Epsilon"
      accountType = "AssetIssue"
      address = "sSCNBGgmA8b9Dwepsa7GK5SDfwk86TvAVm"
      balance = "1000000000000"
    },
    {
      accountName = "Zeta"
      accountType = "AssetIssue"
      address = "sXsJXSxFXhj7to1nJCQdosb6bLqf6HfHCa"
      balance = "1000000000000"
    },

        {
      accountName = "Eta"
      accountType = "AssetIssue"
      address = "sbCMJD9gB2LwqUXoV4JmXiQvfaSeD6hn1c"
      balance = "1000000000000"
    },
    {
      accountName = "Theta"
      accountType = "AssetIssue"
      address = "shAFdVU83HvE1dqitptsYauMgTGTV5boEk"
      balance = "1000000000000"
    },
    {
      accountName = "Iota"
      accountType = "AssetIssue"
      address = "sbXUEAhoGwKEb7jAV4P6gs892hkyY63vgz"
      balance = "1000000000000"
    },
    {
      accountName = "Kappa"
      accountType = "AssetIssue"
      address = "sUAJZ7gA9UE2fAhf3eKmFNi2Di5dpAGJxZ"
      balance = "1000000000000"
    },
    {
      accountName = "Lambda"
      accountType = "AssetIssue"
      address = "sZQdz6ayo2hSbp8YwejuA6H4vzX7jDf6Z5"
      balance = "1000000000000"
    },
    {
      accountName = "Mu"
      accountType = "AssetIssue"
      address = "sh9zYuYmmn4xXZPuW98iL217jLaLJczfPK"
      balance = "1000000000000"
    },
    {
      accountName = "Nu"
      accountType = "AssetIssue"
      address = "sYnezCRo36ypFw4oJkAxfYQ3qvTDyv78Sq"
      balance = "1000000000000"
    },
    {
      accountName = "Quazar"
      accountType = "AssetIssue"
      address = "sauaGhXc8bzMnSB6McATYEBdJWS3JEr6UE"
      balance = "9000000000000000000"
    },
    {
      accountName = "Vacuum"
      accountType = "AssetIssue"
      address = "sYgYufhuBpRjBoor9qZU6FXM4VbpPT8VsD"
      balance = "0"
    },
    {
      accountName = "Eternity"
      accountType = "AssetIssue"
      address = "sdqk3SSibcddJjNTdBDDyzsLsSbwMeyoC3"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      address: sLfARGz83XP8sv9TEFra2EXRQWZMisDTa7,
      url = "https://w1.smartblockchain.net",
      voteCount = 100000026
    },
    {
      address: sQzNCmEy92mM3HvoSq2J6syTTjbToXdbtq,
      url = "https://w2.smartblockchain.net",
      voteCount = 100000025
    },
    {
      address: sUp2eCaTQcE5jAiMJ3Qen5wgNBbu9Gfswe,
      url = "https://w3.smartblockchain.net",
      voteCount = 100000024
    },
    {
      address: sQa6Q6nwnzdRd5JCNeTsCqvu6m9g5chwXn,
      url = "https://w4.smartblockchain.net",
      voteCount = 100000023
    },
    {
      address: sSzmiCkB1xK31hTRKzPSfmrX9oENqGcrCo,
      url = "https://w5.smartblockchain.net",
      voteCount = 100000022
    },
    {
      address: sZspJuJYpsTEUm8zXd2Wj1NXpVahWFfxZW,
      url = "https://w6.smartblockchain.net",
      voteCount = 100000021
    },
    {
      address: sR2FVD7mB1YB9QgGiWReZpQ9hCjHuVRbTR,
      url = "https://w7.smartblockchain.net",
      voteCount = 100000020
    },
    {
      address: seCBEutnmRrLnW6cffFNbQUiqufzxrSx1Z,
      url = "https://w8.smartblockchain.net",
      voteCount = 100000019
    },
    {
      address: sd9ksPTdFQqG3N84cveaxa87pfR5DBSYTU,
      url = "https://w9.smartblockchain.net",
      voteCount = 100000018
    },
        {
      address: sTbduajsjENgHSX8HwPzrjoXEY924bwAQi,
      url = "https://w10.smartblockchain.net",
      voteCount = 100000017
    },
    {
      address: sYQTQGPXwkpziVnR1BkPqfaEb8zWKeJwpe,
      url = "https://w11.smartblockchain.net",
      voteCount = 100000016
    },
    {
      address: sQc9aUzc6KbqD4CBtd6M8TDup67aTSd41R,
      url = "https://w12.smartblockchain.net",
      voteCount = 100000015
    },
    {
      address: sUNNrrWmnjPZgNDTyRA9qt5UxskauBoGEJ,
      url = "https://w13.smartblockchain.net",
      voteCount = 100000014
    },
    {
      address: sLQ7wUdnaKyLEPunFh2D5r3kXLVSqKHSvU,
      url = "https://w14.smartblockchain.net",
      voteCount = 100000013
    },
    {
      address: sJkyv8gjYhuLLn2vLNZZvUKwYRb1QnXRmJ,
      url = "https://w15.smartblockchain.net",
      voteCount = 100000012
    },
    {
      address: sg7PsXLeSKQdvZ8grgYauLN5SsW8PzLPnu,
      url = "https://w16.smartblockchain.net",
      voteCount = 100000011
    },
    {
      address: sUmsD3fSvugcUCh6yph35qycHSEW1ZWAjE,
      url = "https://w17.smartblockchain.net",
      voteCount = 100000010
    },
    {
      address: scbvQNo8cqujwApRddXUoomdDgz7ovJC8N,
      url = "https://w18.smartblockchain.net",
      voteCount = 100000009
    },
        {
      address: sT8epiX9AxCgHMVEBWmrBALJi1VezfqVHz,
      url = "https://w19.smartblockchain.net",
      voteCount = 100000008
    },
        {
      address: sMns3vbgKA8Z4kBMAREjqY9wkuzbZb8acC,
      url = "https://w20.smartblockchain.net",
      voteCount = 100000007
    },
    {
      address: sNxKLoHUxGPDh5WuGowGTcq1me9EraocRX,
      url = "https://w21.smartblockchain.net",
      voteCount = 100000006
    },
    {
      address: sZBjN2MRcgJUFL7HqJtidbeeNpa3j7QCGX,
      url = "https://w22.smartblockchain.net",
      voteCount = 100000005
    },
        {
      address: sTokYE55EaUif89j3YMFy7DfUXSGbJvB4a,
      url = "https://w23.smartblockchain.net",
      voteCount = 100000004
    },
    {
      address: sPcWmFcTV14w2TipChnkKv3ewJ4NGjx2d9,
      url = "https://w24.smartblockchain.net",
      voteCount = 100000003
    },
    {
      address: sN2DtGTv5E18wQEnk5cfCjSx2dTBrv772z,
      url = "https://w25.smartblockchain.net",
      voteCount = 100000002
    },
    {
      address: sfSvbJtdXWsVRng749AwCTcjt61uqTJDB3,
      url = "https://w26.smartblockchain.net",
      voteCount = 100000001
    },
    {
      address: shAGv2xnNFGw5KSdGXPZi1wLvuyAQSQQCT,
      url = "https://w27.smartblockchain.net",
      voteCount = 100000000
    }
  ]

  timestamp = "1674571661" #2017-8-26 12:00:00

  parentHash = "66e86dc1473d0a0cc993323660d86161786c97fa3424656845798245b8e59003"
}

localwitness = []

#localwitnesskeystore = [
#  "src/main/resources/localwitnesskeystore.json"  # if you do not set the localwitness above, you must set this value.Otherwise,your SuperNode can not produce the block.
#]

block = {
  needSyncCheck = true # first node : false, other : true
  maintenanceTimeInterval = 21600000 // 1 day: 86400000(ms), 6 hours: 21600000(ms)
  proposalExpireTime = 259200000
}

trx.expiration.timeInMilliseconds = 60000

vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 5.0
}

committee = {
  allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
  allowSameTokenName = 1
  allowTvmTransferTrc10 = 1
  allowTvmConstantinople = 1
  allowTvmLondon = 1
  allowTvmSolidity059 = 1
  allowTvmIstanbul = 1
}

event.subscribe = {
  native = {
    useNativeQueue = true // if true, use native message queue, else use event plugin.
    bindport = 5555 // bind port
    sendqueuelength = 1000 //max length of send queue
  }

  path = "" // absolute path of plugin
  server = "" // target server address to receive event triggers
  dbconfig = "" // dbname|username|password
  contractParse = true,
  topics = [
    {
      triggerName = "block" // block trigger, the value cannot be modified
      enable = false
      topic = "block" // plugin topic, the value could be modified
    },
    {
      triggerName = "transaction"
      enable = false
      topic = "transaction"
    },
    {
      triggerName = "contractevent"
      enable = false
      topic = "contractevent"
    },
    {
      triggerName = "contractlog"
      enable = false
      topic = "contractlog"
    },
    {
      triggerName = "solidity" // solidity block event trigger, the value cannot be modified
      enable = true            // the default value is true
      topic = "solidity"
    }
  ]

  filter = {
    fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
    toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
    contractAddress = [
      "" // contract address you want to subscribe, if it is set to "", you will receive contract logs/events with any contract address.
    ]

    contractTopic = [
      "" // contract topic you want to subscribe, if it is set to "", you will receive contract logs/events with any contract topic.
    ]
  }
}
